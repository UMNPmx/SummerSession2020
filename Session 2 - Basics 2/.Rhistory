output[i] <- prop_NA(test_df[,i])  #body
}
output
output <- c()
for (i in seq_along(test_df)){
output[i] <- prop_NA(test_df[,i])
}
output
output <- c()
for (i in 1:ncol(test_df)){
output[i] <- prop_NA(test_df[,i])
}
output
output <- c()
for (i in seq(1, ncol(test_df),1)){
output[i] <- prop_NA(test_df[,i])
}
output
seq_along(4)
seq_along(c(1,2,3))
length(test_df)
output <- c()
for (i in seq_along(test_df))){       #test? what other function could be used here? seq(1:ncol(test_df))/1:ncol(test_df)
for (i in seq_along(test_df)){       #test? what other function could be used here? seq(1:ncol(test_df))/1:ncol(test_df)
output[[i]] <- prop_NA(test_df[[i]])
}
output
#add names
col_prop_NA <- c()
names(col_prop_NA) <- names(test_df)
for (i in seq_along(test_df)){
col_prop_NA[[i]] <- prop_NA(test_df[[i]])
names(col_prop_NA)[i] <- names(test_df)[i]
}
col_prop_NA
#add names
col_prop_NA <- c()
for (i in seq_along(test_df)){
col_prop_NA[[i]] <- prop_NA(test_df[[i]])
#names(col_prop_NA)[i] <- names(test_df)[i]
}
col_prop_NA
names(test_df)
test_df
View(test_df)
df <- data.frame(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
View(df)
test_df <- data.frame(
v1 = c(1:5, NA, 6:8, NA),
v2 = seq(1,10,1),                   #seq(from, to, by)
v3 = c(letters[1:9], NA),           #letter() generate lower case letters
v4 = c("apple", "banana", NA, "cherry", NA, NA, NA, "orange", NA, NA)
)
View(test_df)
prop_NA(test_df$v1)
prop_NA(test_df$v2)
prop_NA(test_df$v3)
prop_NA(test_df$v4)
output <- c()                         #output
for (i in 1:4){                       #sequence
output[i] <- prop_NA(test_df[,i])   #body
}
output
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
}
output
names(test_df)
names(test_df)[1]
col_prop_NA <- c()
for (i in seq_along(test_df)){
col_prop_NA[[i]] <- prop_NA(test_df[[i]])
names(col_prop_NA)[i] <- names(test_df)[i]
}
col_prop_NA
col_prop_NA <- function(df){
output <- c()
for (i in seq_along(df)){
output[[i]] <- prop_NA(df[[i]])
names(output)[i] <- names(df)[i]
}
output
}
col_prop_NA(test_df)
apply(test_df, prop_NA)
lapply(test_df, prop_NA)
?apply
#lapply
apply(test_df, 2, prop_NA)
?lapply
data()
col_prop_NA(Indometh)
col_prop_NA(JohnsonJohnson)
JohnsonJohnson
str(JohnsonJohnson)
df(JohnsonJohnson)
JJ <- as.data.frame(JohnsonJohnson)
col_prop_NA(JJ)
View(JJ)
str(Indometh)
str(Nile)
Nile
str(ChickWeight)
col_prop_NA(ChickWeight)
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
if (i > 3) {
break
}
}
output
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
if (i == 3) {
break
}
}
output
col_prop_NA <- function(df, end){
output <- c()
for (i in seq_along(df)){
output[[i]] <- prop_NA(df[[i]])
names(output)[i] <- names(df)[i]
if (i == end) {
break
}
}
output
}
col_prop_NA(df = test_df, end = 3)
col_prop_NA(df = test)
col_prop_NA(df = test_df, end = 3)
col_prop_NA(df = test_df, end = 5)
col_prop_NA <- function(df, end){
output <- c()
for (i in seq_along(df)){
output[[i]] <- prop_NA(df[[i]])
names(output)[i] <- names(df)[i]
if (i == end) break
}
output
}
col_prop_NA(df = test_df, end = 3)
output <- c()
for (i in seq_along(test_df)){
if (i == 3) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output
output <- c()
for (i in seq_along(test_df)){
if (i == 3 | i == 1) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output
na.omit(output)
output
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
if (i == 3) next
}
output
output <- c()
for (i in seq_along(test_df)){
if (i == 3) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output
na.omit(output)
?na.omit
na.exclude(output)
na.exclude(output, fill = NULL)
?colMeans
output[which(!is.na(colSums)),]
output[which(!is.na(colSums(output))),]
output <- !is.na(output)
output
output <- c()
for (i in seq_along(test_df)){
if (i == 3) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output <- output[!is.na(output)]
output
col_prop_NA <- function(df, skip){
output <- c()
for (i in seq_along(test_df)){
if (i == skip) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output <- output[!is.na(output)]    #remove column skipped
output
}
col_prop_NA(df_test_df, skip = 3)
ID = c(1:10, 1:10, 1:10)
ID
bp <- data.frame(
ID  = c(1:10, 1:10, 1:10),
OCC = c(rep(1,10), rep(2,10), rep(3,10)),
BP  = rnorm(30, mean = 130, sd = 13)
)
View(bp)
ID  = c(rep(1:10,9))
ID
bp <- data.frame(
ID  = c(rep(1:10,9)),
OCC = c(rep(1:9,each = 10)),
BP  = rnorm(90, mean = 130, sd = 13)
)
View(bp)
bp <- data.frame(
ID  = c(rep(1:10,9)),
OCC = c(rep(rep(1:3,each = 10), 3)),
BP  = rnorm(90, mean = 130, sd = 13)
)
var <- data.frame(NULL)
for (i in bp$ID{
for (i in bp$ID){
for (j in bp$OCC){
var[i,j] = variance(BP)
row.names(var)[i] = paste("ID" , i, " ")
col.names(var)[j] = paste("OCC", j, " ")
}
}
for (i in bp$ID){
for (j in bp$OCC){
var[i,j] = variance(bp$BP)
row.names(var)[i] = paste("ID" , i, " ")
col.names(var)[j] = paste("OCC", j, " ")
}
}
rownames(bp)
for (i in bp$ID){
for (j in bp$OCC){
var[i,j] = variance(bp$BP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
for (i in bp$ID){
temp1 <- subset(bp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(bp, ID == j)
var[i,j] = variance(temp$BP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
for (i in bp$ID){
temp1 <- subset(bp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(bp, ID == j)
var[i,j] = variance(temp2$BP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
for (i in bp$ID){
temp1 <- subset(bp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(bp, OCC == j)
var[i,j] = variance(temp2$BP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
View(temp1)
for (i in bp$ID){
temp1 <- subset(bp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(temp1, OCC == j)
var[i,j] = variance(temp2$BP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
#create dataset
set(seed = 0720)
#create dataset
set.seed(0720)
sbp <- data.frame(
ID  = c(rep(1:10,9)),
OCC = c(rep(rep(1:3,each = 10), 3)),
SBP  = rnorm(90, mean = 130, sd = 13)
)
var <- data.frame(NULL)
for (i in sbp$ID){
temp1 <- subset(sbp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(temp1, OCC == j)
var[i,j] = variance(temp2$SBP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
## create output container
timesTable <- matrix(-99,nrow=10, ncol=10)
View(timesTable)
Dose = 100 # mg
Vc = 2 # L
k = 0.1 # hr-1
t = seq(0,24,1)
C0 = Dose/Vc
Conc = C0 * exp(-k*t)
#plot(Conc~t)
oneCmtIV <- function(Dose,Time) {
# define parameters
Vc = 2 # L
k = 0.1 # hr-1
# simulation time
t = seq(0, Time, 1)
# calculate concentration
C0 = Dose/Vc
Conc = C0 * exp(-k*t)
# plot
plot(Conc ~ t)
}
oneCmtIV(Dose = 100, Time = 24)
AUC <- 0
AUC <- 0
i <- 1
while (i < 8){
AUC <- AUC + ((conc[i+1] + conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
AUC <- 0
i <- 1
while (i < 8){
AUC <- AUC + ((Conc[i+1] + conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
AUC <- 0
i <- 1
while (i < 8){
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
paste0("AUC0-", i)
AUC
?paste0
AUC <- 0
i <- 1
while (i < 8){
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
paste0("AUC0-", i+1, "=", AUC)
paste0("AUC0-", i+1, "=", AUC, sep=" ")
paste0("AUC_0-", i+1, "=", AUC, sep=" ")
paste0("AUC_0-", i, "=", AUC, sep=" ")
AUC <- 0
i <- 1
while (i < 8){
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
paste0("AUC_0-", i, "=", AUC, sep=" ")
AUC <- 0
i <- 1
repeat{
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
if (i == 8) break
i = i + 1
}
paste0("AUC_0-", i, "=", AUC, sep=" ")
AUC <- 0
i <- 1
while (i <= 8){
AUC <- AUC + ((Conc[i] + Conc[i-1]) * (t[i] - t[i-1]))/2
i = i + 1
}
paste0("AUC_0-", i, "=", AUC, sep=" ")
AUC <- 0
i <- 1
while (i <= 8){
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
paste0("AUC_0-", i, "=", AUC, sep=" ")
while (i <= 8){
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
i = i + 1
}
paste0("AUC_0-", i-1, "=", AUC, sep=" ")
AUC <- 0
i <- 1
repeat{
AUC <- AUC + ((Conc[i+1] + Conc[i]) * (t[i+1] - t[i]))/2
if (i == 8) break
i = i + 1
}
paste0("AUC_0-", i, "=", AUC, sep=" ")
#Assemble a simple dataset
test_df <- data.frame(
v1 = c(1:5, NA, 6:8, NA),
v2 = seq(1,10,1),                         #seq(from, to, by)
v3 = c(letters[1:9], NA),                 #letter() generate lower case letters
v4 = c("apple", "banana", NA, "cherry", NA, NA, NA, "orange", NA, NA)
)
#Assemble a simple dataset
test_df <- data.frame(
v1 = c(1:5, NA, 6:8, NA),
v2 = seq(1,10,1),                         #seq(from, to, by)
v3 = c(letters[1:9], NA),                 #letter() generate lower case letters
v4 = c("apple", "banana", NA, "cherry", NA, NA, NA, "orange", NA, NA)
)
test_df
prop_NA(test_df$v1)
prop_NA(test_df$v2)
prop_NA(test_df$v3)
prop_NA(test_df$v4)
output <- c()                         #output
for (i in 1:4){                       #sequence
output[i] <- prop_NA(test_df[,i])   #body
}
output
output <- c()
for (i in seq_alongtest_df)){
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
}
output
col_prop_NA <- c()
for (i in seq_along(test_df)){
col_prop_NA[[i]] <- prop_NA(test_df[[i]])
names(col_prop_NA)[i] <- names(test_df)[i]
}
col_prop_NA
col_prop_NA(Theoph)
col_prop_NA <- function(df){                #name <- function(argument){
output <- c()                             #output
for (i in seq_along(df)){                 #sequence
output[[i]] <- prop_NA(df[[i]])         #body
names(output)[i] <- names(df)[i]        #}
}
output
}
col_prop_NA(test_df)
col_prop_NA(ChickWeight)
col_prop_NA(Theoph)
?apply()
col_prop_NA(ChickWeight)
col_prop_NA(Theoph)
output <- c()
for (i in seq_along(test_df)){
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
if (i == 3) {
break
}
}
output
output <- c()
for (i in seq_along(test_df)){
if (i == 3) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output <- output[!is.na(output)]      #remove column skipped
output
#Create a function for this as well
col_prop_NA <- function(df, skip){
output <- c()
for (i in seq_along(test_df)){
if (i == skip) next
output[[i]] <- prop_NA(test_df[[i]])
names(output)[i] <- names(test_df)[i]
}
output <- output[!is.na(output)]
output
}
col_prop_NA(df_test_df, skip = 3)
set.seed(0720)
sbp <- data.frame(
ID  = c(rep(1:10,9)),
OCC = c(rep(rep(1:3,each = 10), 3)),
SBP  = rnorm(90, mean = 130, sd = 13)
)
var <- data.frame(NULL)
for (i in sbp$ID){
temp1 <- subset(sbp, ID == i)
for (j in temp1$OCC){
temp2 <- subset(temp1, OCC == j)
var[i,j] = variance(temp2$SBP)
rownames(var)[i] = paste("ID" , i, " ")
colnames(var)[j] = paste("OCC", j, " ")
}
}
var
